name: Deploy to DigitalOcean Droplet

on:
  push:
    branches: [ master ]

env:
  CONTAINER_REGISTRY: registry.digitalocean.com/dmsuhub
  IMAGE_NAME: chatgpt-telegram-bot

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build container image
        run: docker build -t $CONTAINER_REGISTRY/$IMAGE_NAME:$GITHUB_SHA .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $CONTAINER_REGISTRY/$IMAGE_NAME:$GITHUB_SHA

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Digital Ocean droplet via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: IMAGE_NAME,CONTAINER_REGISTRY,GITHUB_SHA
          script: |
            # Login to DO registry and pull the new image
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            docker pull $CONTAINER_REGISTRY/$IMAGE_NAME:$GITHUB_SHA

            # Replace the running container with the new image
            docker stop $IMAGE_NAME || true
            docker rm $IMAGE_NAME || true
            docker run -d \
            --name $IMAGE_NAME \
            -p 3000:3000 \
            -e TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} \
            -e GPT_TOKEN=${{ secrets.GPT_TOKEN }} \
            -e TELEGRAM_AUTHORIZED_USER_IDS="${{ secrets.TELEGRAM_AUTHORIZED_USER_IDS }}" \
            $CONTAINER_REGISTRY/$IMAGE_NAME:$GITHUB_SHA

            # Clean up unused Docker data
            docker system prune -f