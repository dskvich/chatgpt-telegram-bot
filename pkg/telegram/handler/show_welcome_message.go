package handler

import (
	"context"
	"strings"

	"github.com/dskvich/chatgpt-telegram-bot/pkg/domain"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type showWelcomeMessage struct {
	client TelegramClient
}

func NewShowWelcomeMessage(
	client TelegramClient,
) *showWelcomeMessage {
	return &showWelcomeMessage{
		client: client,
	}
}

func (*showWelcomeMessage) CanHandle(u *tgbotapi.Update) bool {
	return u.Message != nil && (strings.HasPrefix(u.Message.Text, "/start") ||
		strings.Contains(strings.ToLower(u.Message.Text), "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å") ||
		strings.Contains(strings.ToLower(u.Message.Text), "—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å"))
}

func (s *showWelcomeMessage) Handle(ctx context.Context, u *tgbotapi.Update) {
	text := `üëã –Ø —Ç–≤–æ–π ChatGPT Telegram-–±–æ—Ç. –í–æ—Ç —á—Ç–æ —É–º–µ—é:

‚ùì –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –ù–∞–ø–∏—à–∏ "–Ω–æ–≤—ã–π —á–∞—Ç" –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏.
üé® –†–∏—Å—É—é –∫–∞—Ä—Ç–∏–Ω–∫–∏. –ù–∞—á–Ω–∏ –∑–∞–ø—Ä–æ—Å —Å "–Ω–∞—Ä–∏—Å—É–π".
üéô –ü–æ–Ω–∏–º–∞—é –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
üì∑ –†–∞—Å–ø–æ–∑–Ω–∞—é –∫–∞—Ä—Ç–∏–Ω–∫–∏.`

	s.client.SendResponse(ctx, u.Message.Chat.ID, &domain.Response{Text: text})
}
